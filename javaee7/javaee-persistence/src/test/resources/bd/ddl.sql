-- DO NOT CHANGE TABLES CREATION ORDER.
CREATE TABLE IF NOT EXISTS C_REGION (
    ID_REGION INT AUTO_INCREMENT NOT NULL,
    ID_TERRITORY INT,
    DS_NAME NVARCHAR(160),
    DT_LAST_MODIFICATION TIMESTAMP DEFAULT GETDATE() NOT NULL,
    ID_LAST_USER_MODIFIER INT DEFAULT 0 NOT NULL,
    FG_ACTIVE BOOLEAN DEFAULT TRUE NOT NULL,
    CONSTRAINT PK_C_REGION PRIMARY KEY (ID_REGION)
);

CREATE TABLE IF NOT EXISTS C_THEATER (
    ID_THEATER INT AUTO_INCREMENT NOT NULL,
    ID_REGION INT,
    ID_CITY INT,
    DS_NAME NVARCHAR(160) NOT NULL,
    ID_STATE INT,
    ID_EMAIL INT,
    ID_VISTA NVARCHAR(20),
    NU_THEATER INT DEFAULT 0,
    DS_TELEPHONE NVARCHAR(50),
    DS_CC_EMAIL NVARCHAR(50),
    FG_VIP BOOLEAN DEFAULT FALSE NOT NULL,
    NU_RENTRAK INT DEFAULT 0 NOT NULL,
    ID_THEATER_PARENT INT,
    NU_INFLUENCE INT NOT NULL,
    DT_LAST_MODIFICATION TIMESTAMP DEFAULT GETDATE() NOT NULL,
    ID_LAST_USER_MODIFIER INT DEFAULT 0 NOT NULL,
    FG_ACTIVE BOOLEAN DEFAULT TRUE NOT NULL,
    CONSTRAINT PK_C_THEATER PRIMARY KEY (ID_THEATER),
    CONSTRAINT FK_C_THEATER_C_REGION FOREIGN KEY (ID_REGION)
    REFERENCES C_REGION (ID_REGION)
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS C_SCREEN (
    ID_SCREEN INT AUTO_INCREMENT NOT NULL,
    ID_THEATER INT NOT NULL,
    ID_VISTA NVARCHAR(20),
    NU_SCREEN INT DEFAULT 0 NOT NULL,
    NU_CAPACITY INT DEFAULT 0 NOT NULL,
    QT_GREEN_SEMAPHORE DECIMAL(5, 2) NOT NULL,
    QT_YELLOW_SEMAPHORE DECIMAL(5, 2) NOT NULL,
    QT_RED_SEMAPHORE DECIMAL(5, 2) NOT NULL,
    ID_SCREEN_FORMAT INT,
    DT_LAST_MODIFICATION TIMESTAMP DEFAULT GETDATE() NOT NULL,
    ID_LAST_USER_MODIFIER INT DEFAULT 0 NOT NULL,
    FG_ACTIVE BOOLEAN DEFAULT TRUE NOT NULL,
    CONSTRAINT PK_C_SCREEN PRIMARY KEY (ID_SCREEN),
    CONSTRAINT FK_C_SCREEN_C_THEATER FOREIGN KEY (ID_THEATER)
    REFERENCES C_THEATER (ID_THEATER)
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS C_SCHEDULER_STATUS (
    ID_SCHEDULER_STATUS INT AUTO_INCREMENT NOT NULL,
    DS_STATUS VARCHAR(25),
    DT_LAST_MODIFICATION TIMESTAMP DEFAULT GETDATE() NOT NULL,
    ID_LAST_USER_MODIFIER INT DEFAULT 0 NOT NULL,
    FG_ACTIVE BOOLEAN DEFAULT TRUE NOT NULL,
    CONSTRAINT PK_C_SCHEDULER_STATUS PRIMARY KEY (ID_SCHEDULER_STATUS)
);

CREATE TABLE IF NOT EXISTS C_ASSIGN_SEATS (
    ID_ASSIGN_SEATS INT NOT NULL,
    DS_DESCRIPTION VARCHAR(100),
    DT_LAST_MODIFICATION TIMESTAMP DEFAULT GETDATE() NOT NULL,
    ID_LAST_USER_MODIFIER INT DEFAULT 0 NOT NULL,
    FG_ACTIVE BOOLEAN DEFAULT TRUE NOT NULL,
    CONSTRAINT PK_C_ASSIGN_SEATS PRIMARY KEY (ID_ASSIGN_SEATS)
);

CREATE TABLE IF NOT EXISTS C_TIME_ZONE (
    ID_TIME_ZONE INT AUTO_INCREMENT NOT NULL,
    DS_STR_CODE VARCHAR(10),
    DS_NAME VARCHAR(30),
    DS_SHORT_NAME VARCHAR(10),
    DT_LAST_MODIFICATION TIMESTAMP DEFAULT GETDATE() NOT NULL,
    ID_LAST_USER_MODIFIER INT DEFAULT 0 NOT NULL,
    FG_ACTIVE BOOLEAN DEFAULT TRUE NOT NULL,
    CONSTRAINT PK_C_TIME_ZONE PRIMARY KEY (ID_TIME_ZONE)
);

CREATE TABLE IF NOT EXISTS C_SESSION_STATUS (
    ID_SESSION_STATUS INT AUTO_INCREMENT NOT NULL,
    DS_STATUS CHAR(1),
    DT_LAST_MODIFICATION TIMESTAMP DEFAULT GETDATE() NOT NULL,
    ID_LAST_USER_MODIFIER INT DEFAULT 0 NOT NULL,
    FG_ACTIVE BOOLEAN DEFAULT TRUE NOT NULL,
    CONSTRAINT PK_C_SESSION_STATUS PRIMARY KEY (ID_SESSION_STATUS)
);

CREATE TABLE IF NOT EXISTS C_PARAMETERS (
    ID_PARAMETER INT AUTO_INCREMENT NOT NULL,
    DS_NAME NVARCHAR(20) NOT NULL,
    CH_DESCRIPTION NVARCHAR(100) NOT NULL,
    CH_TYPE NVARCHAR(20) NOT NULL,
    DT_CREATION TIMESTAMP DEFAULT GETDATE() NOT NULL,
    DT_LAST_MODIFICATION TIMESTAMP DEFAULT GETDATE() NOT NULL,
    ID_LAST_USER_MODIFIER INT DEFAULT 0 NOT NULL,
    FG_ACTIVE BOOLEAN DEFAULT TRUE NOT NULL,
    CONSTRAINT PK__C_PARAME__790CB586D8414255 PRIMARY KEY (ID_PARAMETER)
);

CREATE TABLE IF NOT EXISTS C_SESSION_TYPE (
    ID_SESSION_TYPE INT AUTO_INCREMENT NOT NULL,
    DS_SESSION_TYPE_CODE VARCHAR(10),
    DT_LAST_MODIFICATION TIMESTAMP DEFAULT GETDATE() NOT NULL,
    ID_LAST_USER_MODIFIER INT DEFAULT 0 NOT NULL,
    FG_ACTIVE BOOLEAN DEFAULT TRUE NOT NULL,
    CONSTRAINT PK_C_SESSION_TYPE PRIMARY KEY (ID_SESSION_TYPE)
);

-- Comments
CREATE TABLE IF NOT EXISTS K_COMMENT (
        ID_COMMENT INT AUTO_INCREMENT NOT NULL,
        DS_DESCRIPTION VARCHAR(250),
        DT_DATE_TIME DATETIME,
        ID_THEATER INT,
        DT_LAST_MODIFICATION TIMESTAMP DEFAULT GETDATE() NOT NULL,
        ID_LAST_USER_MODIFIER INT DEFAULT 0 NOT NULL,
        FG_ACTIVE BOOLEAN DEFAULT TRUE NOT NULL,
        CONSTRAINT PK_K_COMMENT PRIMARY KEY (ID_COMMENT),
        CONSTRAINT FK_K_COMMENT_C_THEATER FOREIGN KEY
        (ID_THEATER) REFERENCES C_THEATER (ID_THEATER)
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
    );

CREATE TABLE IF NOT EXISTS C_CONNECTION_DATA (
    ID_CONECTION_DATA INT AUTO_INCREMENT NOT NULL,
    ID_VISTA VARCHAR(50),
    ID_THEATER            INT,
    DS_DB_NAME VARCHAR(30),
    DS_IP_ADDRESS VARCHAR(20),
    DS_PORT VARCHAR(10),
    DS_USER VARCHAR(30),
    DS_INSTANCE VARCHAR(30),
    DS_PASSWORD NVARCHAR(50),
    DT_LAST_MODIFICATION TIMESTAMP DEFAULT GETDATE() NOT NULL,
    ID_LAST_USER_MODIFIER INT DEFAULT 0 NOT NULL,
    FG_ACTIVE BOOLEAN DEFAULT TRUE NOT NULL,
    CONSTRAINT PK_C_CONNECTION_DATA PRIMARY KEY (ID_CONECTION_DATA),
    CONSTRAINT FK_C_CONNECTION_DATA_C_THEATER FOREIGN KEY (ID_THEATER)
    REFERENCES C_THEATER (ID_THEATER)
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
);

-- Users
CREATE TABLE IF NOT EXISTS K_USER (
    ID_USER INT AUTO_INCREMENT NOT NULL,
    DS_NAME NVARCHAR(30) NOT NULL,
    DS_USERNAME NVARCHAR(30) NOT NULL,
    DS_EMAIL NVARCHAR(30) NOT NULL,
    DT_LAST_MODIFICATION TIMESTAMP DEFAULT GETDATE() NOT NULL,
    ID_LAST_USER_MODIFIER INT DEFAULT 1 NOT NULL,
    FG_ACTIVE BOOLEAN DEFAULT TRUE NOT NULL,
    CONSTRAINT PK_K_USER PRIMARY KEY (ID_USER)
);

CREATE TABLE IF NOT EXISTS C_PROFILE (
    ID_PROFILE INT AUTO_INCREMENT NOT NULL,
    DS_NAME NVARCHAR(30),
    DS_PERMISSIONS NVARCHAR(MAX),
    DT_LAST_MODIFICATION TIMESTAMP DEFAULT GETDATE() NOT NULL,
    ID_LAST_USER_MODIFIER INT DEFAULT 0 NOT NULL,
    FG_ACTIVE BOOLEAN DEFAULT TRUE NOT NULL,
    CONSTRAINT PK_C_PROFILE PRIMARY KEY (ID_PROFILE)
);

CREATE TABLE IF NOT EXISTS K_USER_X_REGION (
    ID_USER INT NOT NULL,
    ID_REGION INT NOT NULL,
    CONSTRAINT FK_K_USER_X_REGION_REGION FOREIGN KEY (ID_REGION) REFERENCES
    C_REGION (ID_REGION) ON
    UPDATE NO ACTION ON
    DELETE NO ACTION,
    CONSTRAINT PK_K_USER_X_REGION_1 PRIMARY KEY (ID_USER, ID_REGION),
    CONSTRAINT FK_K_USER_X_REGION_USER FOREIGN KEY (ID_USER)
    REFERENCES K_USER (ID_USER)
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS K_USER_X_THEATER (
    ID_USER INT NOT NULL,
    ID_THEATER INT NOT NULL,
    CONSTRAINT FK_K_USER_X_THEATER_THEATER FOREIGN KEY (ID_THEATER)
    REFERENCES C_THEATER (ID_THEATER)
    ON UPDATE NO ACTION
    ON DELETE NO ACTION,
    CONSTRAINT FK_K_USER_X_THEATER_USER FOREIGN KEY (ID_USER)
    REFERENCES K_USER (ID_USER)
    ON UPDATE NO ACTION
    ON DELETE NO ACTION,
    CONSTRAINT PK_K_USER_X_THEATER_1 PRIMARY KEY (ID_USER, ID_THEATER)
);

CREATE TABLE IF NOT EXISTS K_USER_X_PROFILE (
    ID_USER INT NOT NULL,
    ID_PROFILE INT NOT NULL,
    CONSTRAINT FK_K_USER_X_PROFILE_USER FOREIGN KEY (ID_USER) 
    REFERENCES K_USER (ID_USER)
    ON UPDATE NO ACTION 
    ON DELETE NO ACTION,
    CONSTRAINT PK_K_USER_X_PROFILE_1 PRIMARY KEY (ID_USER, ID_PROFILE),
    CONSTRAINT FK_K_USER_X_PROFILE_PROFILE FOREIGN KEY (ID_PROFILE)
    REFERENCES C_PROFILE (ID_PROFILE)
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
);

-- Functions
CREATE TABLE IF NOT EXISTS K_FUNCTION (
    ID_FUNCTION INT AUTO_INCREMENT NOT NULL,
    ID_VISTA VARCHAR(100),
    DS_THEATER_NAME VARCHAR(100),
    NU_SCREEN_NUMBER INT,
    DS_SCREEN_FORMAT VARCHAR(100),
    ID_MOVIE VARCHAR(100),
    DS_EVENT_NAME VARCHAR(200),
    NU_DURATION INT,
    DT_DATE_TIME TIMESTAMP,
    NU_FUNCION INT,
    ID_SCHEDULER_STATUS INT NOT NULL,
    ID_SESSION_VISTA INT,
    NU_ERROR_CODE_VISTA INT,
    DT_CREATION TIMESTAMP,
    DT_LAST_MODIFICATION TIMESTAMP DEFAULT GETDATE() NOT NULL,
    ID_LAST_USER_MODIFIER INT DEFAULT 0 NOT NULL,
    FG_ACTIVE BOOLEAN DEFAULT TRUE NOT NULL,
    CONSTRAINT PK_K_FUNCTION PRIMARY KEY (ID_FUNCTION),
    CONSTRAINT FK_ID_STATUS_FUNCTION FOREIGN KEY (ID_SCHEDULER_STATUS)
    REFERENCES C_SCHEDULER_STATUS (ID_SCHEDULER_STATUS)
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS K_FUNCTION_BE (
    ID_FUNCTION INT NOT NULL,
    ID_VISTA VARCHAR(100),
    DS_THEATER_NAME VARCHAR(100),
    NU_SCREEN_NUMBER INT,
    DS_SCREEN_FORMAT VARCHAR(100),
    ID_MOVIE VARCHAR(100),
    DS_EVENT_NAME VARCHAR(200),
    NU_DURATION INT,
    DT_DATE_TIME TIMESTAMP,
    NU_FUNCION INT,
    ID_SCHEDULER_STATUS INT NOT NULL,
    DT_CREATION TIMESTAMP,
    DT_LAST_MODIFICATION TIMESTAMP DEFAULT GETDATE() NOT NULL,
    ID_LAST_USER_MODIFIER INT DEFAULT 0 NOT NULL,
    FG_ACTIVE BOOLEAN DEFAULT TRUE NOT NULL,
    DT_BACKED_UP TIMESTAMP DEFAULT GETDATE() NOT NULL,
    CONSTRAINT PK_K_FUNCTION_BE PRIMARY KEY (ID_FUNCTION),
    CONSTRAINT FK_K_FUNCTION_BE_C_SCHEDULER_STATUS FOREIGN KEY (ID_SCHEDULER_STATUS)
    REFERENCES C_SCHEDULER_STATUS (ID_SCHEDULER_STATUS)
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS K_FUNCTION_AF (
    ID_FUNCTION INT NOT NULL,
    ID_VISTA VARCHAR(100),
    DS_THEATER_NAME VARCHAR(100),
    NU_SCREEN_NUMBER INT,
    DS_SCREEN_FORMAT VARCHAR(100),
    ID_MOVIE VARCHAR(100),
    DS_EVENT_NAME VARCHAR(200),
    NU_DURATION INT,
    DT_DATE_TIME TIMESTAMP,
    NU_FUNCION INT,
    ID_SCHEDULER_STATUS INT NOT NULL,
    DT_CREATION TIMESTAMP,
    DT_LAST_MODIFICATION TIMESTAMP DEFAULT GETDATE() NOT NULL,
    ID_LAST_USER_MODIFIER INT DEFAULT 0 NOT NULL,
    FG_ACTIVE BOOLEAN DEFAULT TRUE NOT NULL,
    DT_BACKED_UP TIMESTAMP DEFAULT GETDATE() NOT NULL,
    CONSTRAINT PK_K_FUNCTION_AF PRIMARY KEY (ID_FUNCTION),
    CONSTRAINT FK_K_FUNCTION_AF_C_SCHEDULER_STATUS FOREIGN KEY (ID_SCHEDULER_STATUS)
    REFERENCES C_SCHEDULER_STATUS (ID_SCHEDULER_STATUS)
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
);

-- Properties
CREATE TABLE IF NOT EXISTS K_PROPERTIES_DEFAULT (
    ID_PROPERTY_DEFAULT   INT AUTO_INCREMENT         NOT NULL,
    CVE_FUNCION           INT                        NOT NULL,
    ID_SESSION_STATUS     INT                        NOT NULL,
    DS_FULL               CHAR(1),
    ID_ASSIGN_SEATS       INT,
    DS_SESSION_ATTRIBUTES NVARCHAR(100),
    DS_PUBLIC_EXHIBITION  CHAR(1),
    DS_FUNCTION_TYPE      NVARCHAR(5),
    QT_INTERVAL_DURATION  INT,
    QT_CLEAN_DURATION     INT,
    QT_TRAILER_DURATION   INT,
    DT_END_FUNCTION       DATETIME,
    DT_INTERVAL_START     DATETIME,
    DS_SALES_CHANNEL      NVARCHAR(60),
    DT_POLICIES_DATE      DATETIME,
    DS_ADVANCED_INCOMES   CHAR(1),
    DS_ALLOW_OVERSALES    CHAR(1),
    ID_PRICE_GROUP        INT,
    DS_RULES_BUY_TICKETS  CHAR(1),
    QT_SALES_VALUE        NUMERIC(18),
    DT_LAST_MODIFICATION  DATETIME DEFAULT getdate() NOT NULL,
    ID_LAST_USER_MODIFIER INT DEFAULT 0              NOT NULL,
    FG_ACTIVE             BIT DEFAULT 1,
    DS_FILM_STR_CODE	  VARCHAR(10),
    ID_CINEMA_STRCODE       varchar(6),
    DS_TIMEZ_STRCODE        varchar(10),
    ID_CINOPERATOR_STRCODE varchar(6),
    CONSTRAINT PK_K_PROPERTIES_DEFAULT PRIMARY KEY (ID_PROPERTY_DEFAULT)
);

CREATE TABLE IF NOT EXISTS K_PROPERTIES (
    ID_PROPERTY           INT IDENTITY,
    ID_FUNCTION           INT                        NOT NULL,
    ID_SESSION_STATUS     INT                        NOT NULL,
    DS_FULL               CHAR(1),
    ID_ASSIGN_SEATS       INT,
    DS_SESSION_ATTRIBUTES NVARCHAR(100),
    DS_PUBLIC_EXHIBITION  CHAR(1),
    DS_FUNCTION_TYPE      NVARCHAR(5),
    QT_INTERVAL_DURATION  INT,
    QT_CLEAN_DURATION     INT,
    QT_TRAILER_DURATION   INT,
    DT_END_FUNCTION       DATETIME,
    DT_INTERVAL_START     DATETIME,
    DS_SALES_CHANNEL      NVARCHAR(60),
    DT_POLICIES_DATE      DATETIME,
    DS_ADVANCED_INCOMES   CHAR(1),
    DS_ALLOW_OVERSALES    CHAR(1),
    ID_PRICE_GROUP        INT,
    DS_RULES_BUY_TICKETS  CHAR(1),
    QT_SALES_VALUE        NUMERIC(18),
    DT_LAST_MODIFICATION  DATETIME DEFAULT getdate() NOT NULL,
    ID_LAST_USER_MODIFIER INT DEFAULT 0              NOT NULL,
    FG_ACTIVE             BIT DEFAULT 1              NOT NULL,
    DS_FILM_STR_CODE	  VARCHAR(10),
    ID_CINEMA_STRCODE       varchar(6),
    DS_TIMEZ_STRCODE        varchar(10),
    ID_CINOPERATOR_STRCODE varchar(6),
    CONSTRAINT FK_PROPERTIES_ID_FUNCTION FOREIGN KEY (ID_FUNCTION)
    REFERENCES K_FUNCTION (ID_FUNCTION)
    ON UPDATE NO ACTION
    ON DELETE NO ACTION,
    CONSTRAINT FK_PROPERTIES_ID_ASSIGN_SEATS FOREIGN KEY (ID_ASSIGN_SEATS)
    REFERENCES C_ASSIGN_SEATS (ID_ASSIGN_SEATS)
    ON UPDATE NO ACTION
    ON DELETE NO ACTION,
    CONSTRAINT FK_PROPERTIES_SESSION_STATUS FOREIGN KEY (ID_SESSION_STATUS)
    REFERENCES C_SESSION_STATUS (ID_SESSION_STATUS)
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS K_PROPERTIES_BE (
    ID_PROPERTY           INT                        NOT NULL,
    ID_FUNCTION           INT                        NOT NULL,
    ID_SESSION_STATUS     INT                        NOT NULL,
    DS_FULL               CHAR(1),
    ID_ASSIGN_SEATS       INT,
    DS_SESSION_ATTRIBUTES NVARCHAR(100),
    DS_PUBLIC_EXHIBITION  CHAR(1),
    DS_FUNCTION_TYPE      NVARCHAR(5),
    QT_INTERVAL_DURATION  INT,
    QT_CLEAN_DURATION     INT,
    QT_TRAILER_DURATION   INT,
    DT_END_FUNCTION       DATETIME,
    DT_INTERVAL_START     DATETIME,
    DS_SALES_CHANNEL      NVARCHAR(60),
    DT_POLICIES_DATE      DATETIME,
    DS_ADVANCED_INCOMES   CHAR(1),
    DS_ALLOW_OVERSALES    CHAR(1),
    ID_PRICE_GROUP        INT,
    DS_RULES_BUY_TICKETS  CHAR(1),
    QT_SALES_VALUE        NUMERIC(18),
    DT_LAST_MODIFICATION  DATETIME DEFAULT getdate() NOT NULL,
    ID_LAST_USER_MODIFIER INT DEFAULT 0              NOT NULL,
    FG_ACTIVE             BIT DEFAULT 1              NOT NULL,
    DT_BACKED_UP          DATETIME DEFAULT getdate() NOT NULL,
    DS_FILM_STR_CODE	  VARCHAR(10),
    ID_CINEMA_STRCODE       varchar(6),
    DS_TIMEZ_STRCODE        varchar(10),
    ID_CINOPERATOR_STRCODE varchar(6),
    CONSTRAINT PK_K_PROPERTIES_BE PRIMARY KEY (ID_PROPERTY),
    CONSTRAINT FK_PROPERTIES_ID_ASSIGN_SEATS_BE FOREIGN KEY (ID_ASSIGN_SEATS)
    REFERENCES C_ASSIGN_SEATS (ID_ASSIGN_SEATS)
    ON UPDATE NO ACTION
    ON DELETE NO ACTION,
    CONSTRAINT FK_PROPERTIES_ID_FUNCTION_BE FOREIGN KEY (ID_FUNCTION)
    REFERENCES K_FUNCTION_BE (ID_FUNCTION)
    ON UPDATE NO ACTION
    ON DELETE NO ACTION,
    CONSTRAINT FK_PROPERTIES_SESSION_STATUS_BE FOREIGN KEY (ID_SESSION_STATUS)
    REFERENCES C_SESSION_STATUS (ID_SESSION_STATUS)
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS K_PROPERTIES_AF
(
    ID_PROPERTY           INT                        NOT NULL,
    ID_FUNCTION           INT                        NOT NULL,
    ID_SESSION_STATUS     INT                        NOT NULL,
    DS_FULL               CHAR(1),
    ID_ASSIGN_SEATS       INT,
    DS_SESSION_ATTRIBUTES NVARCHAR(100),
    DS_PUBLIC_EXHIBITION  CHAR(1),
    DS_FUNCTION_TYPE      NVARCHAR(5),
    QT_INTERVAL_DURATION  INT,
    QT_CLEAN_DURATION     INT,
    QT_TRAILER_DURATION   INT,
    DT_END_FUNCTION       DATETIME,
    DT_INTERVAL_START     DATETIME,
    DS_SALES_CHANNEL      NVARCHAR(60),
    DT_POLICIES_DATE      DATETIME,
    DS_ADVANCED_INCOMES   CHAR(1),
    DS_ALLOW_OVERSALES    CHAR(1),
    ID_PRICE_GROUP        INT,
    DS_RULES_BUY_TICKETS  CHAR(1),
    QT_SALES_VALUE        NUMERIC(18),
    DT_LAST_MODIFICATION  DATETIME DEFAULT getdate() NOT NULL,
    ID_LAST_USER_MODIFIER INT DEFAULT 0              NOT NULL,
    FG_ACTIVE             BIT DEFAULT 1              NOT NULL,
    DT_BACKED_UP          DATETIME DEFAULT getdate() NOT NULL,
    DS_FILM_STR_CODE	  VARCHAR(10),
    ID_CINEMA_STRCODE       varchar(6),
    DS_TIMEZ_STRCODE        varchar(10),
    ID_CINOPERATOR_STRCODE varchar(6),
    CONSTRAINT PK_K_PROPERTIES_AF PRIMARY KEY (ID_PROPERTY),
    CONSTRAINT FK_PROPERTIES_ID_ASSIGN_SEATS_AF FOREIGN KEY (ID_ASSIGN_SEATS)
    REFERENCES C_ASSIGN_SEATS (ID_ASSIGN_SEATS)
    ON UPDATE NO ACTION
    ON DELETE NO ACTION,
    CONSTRAINT FK_PROPERTIES_ID_FUNCTION_AF FOREIGN KEY (ID_FUNCTION)
    REFERENCES K_FUNCTION_AF (ID_FUNCTION)
    ON UPDATE NO ACTION
    ON DELETE NO ACTION,
    CONSTRAINT FK_PROPERTIES_SESSION_STATUS_AF FOREIGN KEY (ID_SESSION_STATUS)
    REFERENCES C_SESSION_STATUS (ID_SESSION_STATUS)
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
);